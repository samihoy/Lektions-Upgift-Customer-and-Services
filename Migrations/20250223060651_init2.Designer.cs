// <auto-generated />
using Lektions_Upgift_Customer_and_Services.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lektions_Upgift_Customer_and_Services.Migrations
{
    [DbContext(typeof(CarRentalCompanyDBContext))]
    [Migration("20250223060651_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lektions_Upgift_Customer_and_Services.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Lektions_Upgift_Customer_and_Services.Models.CustomerServices", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FK_Customer")
                        .HasColumnType("int");

                    b.Property<int>("FK_Services")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FK_Customer");

                    b.HasIndex("FK_Services");

                    b.ToTable("CustomerServices");
                });

            modelBuilder.Entity("Lektions_Upgift_Customer_and_Services.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Lektions_Upgift_Customer_and_Services.Models.CustomerServices", b =>
                {
                    b.HasOne("Lektions_Upgift_Customer_and_Services.Models.Customer", "Customer")
                        .WithMany("Services")
                        .HasForeignKey("FK_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lektions_Upgift_Customer_and_Services.Models.Service", "Service")
                        .WithMany("Customers")
                        .HasForeignKey("FK_Services")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Lektions_Upgift_Customer_and_Services.Models.Customer", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Lektions_Upgift_Customer_and_Services.Models.Service", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
